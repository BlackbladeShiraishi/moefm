// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: 'gradle/dependency-version.gradle'

def javaSubprojects = []

def groovySubprojects = []
groovySubprojects << ':domain'
groovySubprojects << ':business:interface'
groovySubprojects << ':business:impl-moefm'
groovySubprojects << ':facade'

javaSubprojects.each {projectPath ->
  project(projectPath) {
    apply plugin: 'java'
  }
}

groovySubprojects.each {projectPath ->
  project(projectPath) {

    apply plugin: 'groovy'

    dependencies {
      compile "org.codehaus.groovy:groovy:$groovyVersion"
    }

  }
}

(javaSubprojects + groovySubprojects).each {projectPath ->
  project(projectPath) {

    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    sourceCompatibility = JavaVersion.VERSION_1_7

    dependencies {
      compile 'com.google.code.findbugs:jsr305:3.0.1'
      testCompile "junit:junit:$junitVersion"
    }

    checkstyle {
      //toolVersion = "6.2"
      configFile = rootProject.file 'config/checkstyle/checkstyle.xml'
    }

    pmd {
      ruleSets = ["java-basic", "java-braces"/*, "java-junit"*/]
    }

    findbugs {
      excludeFilter = rootProject.file 'config/findbugs/excludeFilter.xml'
    }

  }
}


allprojects {
  group = 'com.github.blackbladeshiraishi.fm.moe'
  version = new Version('0.1.0-SNAPSHOT')
  status = version.status

  repositories {
    jcenter()
    mavenCentral()
    maven {url "http://maven.oschina.net/content/groups/public/"}
  }

  tasks.findAll {
    task -> [JavaCompile, Javadoc, GroovyCompile/*, Groovydoc*/].any {it.isInstance(task)}
  }.each {task ->
    task.options.encoding = 'UTF-8'
  }

  tasks.withType(GroovyCompile) {task ->
    task.groovyOptions.with {
      configurationScript = file "$rootDir/config/groovy/compiler-config.groovy"
      //optimizationOptions.indy = true
    }
  }

}

task clean(type: Delete) {
  delete rootProject.buildDir
}
